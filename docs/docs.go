// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Seyma TUTAN GUN",
            "email": "seymatutan@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/card/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add Card for User",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Add Card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "write Bearer before token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "req params",
                        "name": "CardReqBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CardReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/card/get/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Card Details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Get Card Details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "write Bearer before token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CardDetailRes"
                        }
                    }
                }
            }
        },
        "/api/card/list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List user's Card, pagination and sort",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "List Card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "write Bearer before token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CardRes"
                        }
                    }
                }
            }
        },
        "/api/deactivate/:id": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deactivate Card",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Deactivate Card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "write Bearer before token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/delete/:id": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deactivate Card",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Delete Card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "write Bearer before token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/payment/complete": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Complete payment with qr code and total amount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Complete Payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "write Bearer before token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "req params",
                        "name": "PaymentReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PaymentReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/update/:id": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Card",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Update Card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "write Bearer before token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "req params",
                        "name": "CardReqBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CardReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/wallet/get": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Wallet Details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get Wallet Details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "write Bearer before token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.WalletRes"
                        }
                    }
                }
            }
        },
        "/api/wallet/load": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Load Money to Wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Load Money to Wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "write Bearer before token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "req params",
                        "name": "WalletTransactionReqBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.WalletTransactionReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/wallet/qr": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Generate Login User QRCode for payment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Generate QRCode for payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "write Bearer before token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.QRCodeRes"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login with email and password. Pasword must include Must include upper and lowercase, special character, number. Max length 12 and mininum 8. Returen access_token and refresh_token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "req params",
                        "name": "LoginReqBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TokenRes"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Generate access_token from refresh_token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Refresh Token",
                "parameters": [
                    {
                        "description": "req params",
                        "name": "TokenRes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TokenRes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AccessTokenRes"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "User and user wallet are created",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "req params",
                        "name": "UserReqBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AccessTokenRes": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "model.CardDetailRes": {
            "type": "object",
            "properties": {
                "bank_name": {
                    "type": "string"
                },
                "card_name": {
                    "type": "string"
                },
                "card_number": {
                    "type": "string"
                },
                "cvc": {
                    "type": "integer"
                },
                "exp_month": {
                    "type": "integer"
                },
                "exp_year": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.CardReqBody": {
            "type": "object",
            "required": [
                "bank_name",
                "card_name",
                "card_number",
                "cvc",
                "exp_month",
                "exp_year",
                "full_name"
            ],
            "properties": {
                "bank_name": {
                    "type": "string"
                },
                "card_name": {
                    "type": "string"
                },
                "card_number": {
                    "type": "string"
                },
                "cvc": {
                    "type": "integer"
                },
                "exp_month": {
                    "type": "integer"
                },
                "exp_year": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                }
            }
        },
        "model.CardRes": {
            "type": "object",
            "properties": {
                "card_name": {
                    "type": "string"
                },
                "card_number": {
                    "type": "string"
                },
                "exp_month": {
                    "type": "integer"
                },
                "exp_year": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.LoginReqBody": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.PaymentReq": {
            "type": "object",
            "required": [
                "amount",
                "qr_code"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "qr_code": {
                    "type": "string"
                }
            }
        },
        "model.QRCodeRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "model.TokenRes": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "model.UserReqBody": {
            "type": "object",
            "required": [
                "birthday",
                "email",
                "mobile_phone",
                "name",
                "password",
                "surname",
                "tc"
            ],
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobile_phone": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "tc": {
                    "type": "string"
                }
            }
        },
        "model.WalletRes": {
            "type": "object",
            "properties": {
                "current_amount": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "unique_key": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.WalletTransactionReqBody": {
            "type": "object",
            "required": [
                "amount",
                "card_number",
                "cvc",
                "transaction_type",
                "wallet_id"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "card_number": {
                    "type": "string"
                },
                "cvc": {
                    "type": "integer"
                },
                "transaction_type": {
                    "type": "integer"
                },
                "wallet_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Market API",
	Description:      "This is a sample server Market API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
